swagger: "2.0"
info:
  description: "API for institution related operations. This doc covers only the subject resource"
  version: "0.0.1"
  title: "api-institutions"
basePath: "/v1"
tags:
  - name: "subjects"
    description: "Manage subjects information"
schemes:
  - "https"
paths:
  /subjects/{id}:
    get:
      tags:
        - "subjects"
      summary: "Get an specific subject"
      operationId: "getSubject"
      parameters:
        - in: "path"
          type: "string"
          name: "id"
          description: "The id of the subject to query"
          required: true
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              data:
                $ref: "#/definitions/Subject"
        "404":
          description: "Subject not found for given id"
        "500":
          description: "Service error"
    put:
      tags:
        - "subjects"
      summary: "Updates a subject"
      operationId: "updateSubject"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          type: "string"
          name: "id"
          description: "The id of the subject to update"
          required: true
        - in: "body"
          name: "body"
          description: "Basic information to update a Subject"
          required: true
          schema:
            $ref: "#/definitions/UpdateSubjectPayload"
      responses:
        "204":
          description: "Subject updated"
        "500":
          description: "Service error"
    delete:
      tags:
        - "subjects"
      summary: "Deletes a subject"
      operationId: "deleteSubject"
      parameters:
        - in: "path"
          type: "string"
          name: "id"
          description: "The id of the subject to delete"
          required: true
      responses:
        "204":
          description: "Subject deleted"
        "500":
          description: "Service error"
  /subjects/{id}/activate:
    post:
      tags:
        - "subjects"
      summary: "Activate a subject"
      operationId: "activateSubject"
      parameters:
        - in: "path"
          type: "string"
          name: "id"
          description: "The id of the subject to activate"
          required: true
      responses:
        "204":
          description: "Successful operation"
        "404":
          description: "Subject not found for given id"
        "500":
          description: "Service error"
  /subjects/{id}/correlatives:
    get:
      tags:
        - "subjects"
      summary: "Get the correlatives of a subject"
      operationId: "getSubjectCorrelatives"
      parameters:
        - in: "path"
          type: "string"
          name: "id"
          description: "The id of the subject"
          required: true
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Correlative"
        "404":
          description: "Subject not found for given id"
        "500":
          description: "Service error"
    post:
      tags:
        - "subjects"
      summary: "Creates a correlative"
      operationId: "createCorrelative"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          type: "string"
          name: "id"
          description: "The id of the subject to update"
          required: true
        - in: "body"
          name: "body"
          description: "Basic information to create a Correlative"
          required: true
          schema:
            $ref: "#/definitions/CreateCorrelativePayload"
      responses:
        "204":
          description: "Subject updated"
        "500":
          description: "Service error"


definitions:
  Subject:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      name:
        type: "string"
        example: "Dise単o de Sistemas"
      codename:
        type: "string"
        example: "DSI"
      programId:
        type: "string"
        format: "uuid"
      hours:
        type: "integer"
        example: 2
      points:
        type: "integer"
        example: 1
      active:
        type: "boolean"
      optative:
        type: "boolean"
      createdAt:
        type: "integer"
        example: 1592092149591
      updatedAt:
        type: "integer"
        example: 1592092149591
  Correlative:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      name:
        type: "string"
        example: "Dise単o de Sistemas"
      codename:
        type: "string"
        example: "DSI"
      subjectId:
        type: "string"
        format: "uuid"
      hours:
        type: "integer"
        example: 2
      points:
        type: "integer"
        example: 1
      active:
        type: "boolean"
      optative:
        type: "boolean"
      createdAt:
        type: "integer"
        example: 1592092149591
      updatedAt:
        type: "integer"
        example: 1592092149591
  UpdateSubjectPayload:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Dise単o de Sistemas"
      codename:
        type: "string"
        example: "DSI"
      hours:
        type: "integer"
        example: 4
      points:
        type: "integer"
        example: 2
      optative:
        type: "boolean"
  CreateCorrelativePayload:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Dise単o de Sistemas"
      codename:
        type: "string"
        example: "DSI"
      hours:
        type: "integer"
        example: 2
      points:
        type: "integer"
        example: 2
      optative:
        type: "boolean"
