swagger: "2.0"
info:
  description: "API for institution related operations. This doc covers only the program resource"
  version: "0.0.1"
  title: "api-institutions"
basePath: "/v1"
tags:
  - name: "programs"
    description: "Manage programs information"
schemes:
  - "https"
paths:
  /programs/{id}:
    get:
      tags:
        - "programs"
      summary: "Get an specific program"
      operationId: "getProgram"
      parameters:
        - in: "path"
          type: "string"
          name: "id"
          description: "The id of the program to query"
          required: true
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              data:
                $ref: "#/definitions/Program"
        "404":
          description: "Program not found for given id"
        "500":
          description: "Service error"
    put:
      tags:
        - "programs"
      summary: "Updates a program"
      operationId: "updateProgram"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          type: "string"
          name: "id"
          description: "The id of the program to update"
          required: true
        - in: "body"
          name: "body"
          description: "Basic information to update a Program"
          required: true
          schema:
            $ref: "#/definitions/UpdateProgramPayload"
      responses:
        "204":
          description: "Program updated"
        "500":
          description: "Service error"
    delete:
      tags:
        - "programs"
      summary: "Deletes a program"
      operationId: "deleteProgram"
      parameters:
        - in: "path"
          type: "string"
          name: "id"
          description: "The id of the program to delete"
          required: true
      responses:
        "204":
          description: "Program deleted"
        "500":
          description: "Service error"
  /programs/{id}/activate:
    post:
      tags:
        - "programs"
      summary: "Activate a program"
      operationId: "activateProgram"
      parameters:
        - in: "path"
          type: "string"
          name: "id"
          description: "The id of the program to activate"
          required: true
      responses:
        "204":
          description: "Successful operation"
        "404":
          description: "Program not found for given id"
        "500":
          description: "Service error"
  /programs/{id}/subjects:
    get:
      tags:
        - "programs"
      summary: "Get the subjects of a program"
      operationId: "getProgramSubjects"
      parameters:
        - in: "path"
          type: "string"
          name: "id"
          description: "The id of the program"
          required: true
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "object"
            properties:
              data:
                type: "array"
                items:
                  $ref: "#/definitions/Subject"
        "404":
          description: "Program not found for given id"
        "500":
          description: "Service error"
    post:
      tags:
        - "programs"
      summary: "Creates a subject"
      operationId: "createSubject"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          type: "string"
          name: "id"
          description: "The id of the program to update"
          required: true
        - in: "body"
          name: "body"
          description: "Basic information to create a Subject"
          required: true
          schema:
            $ref: "#/definitions/CreateSubjectPayload"
      responses:
        "204":
          description: "Program updated"
        "500":
          description: "Service error"


definitions:
  Program:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      name:
        type: "string"
        example: "Plan 2008"
      programId:
        type: "string"
        format: "uuid"
      validFrom:
        type: "integer"
        example: 1588896000000
      validTo:
        type: "integer"
        example: 1588982400000
      hours:
        type: "integer"
        example: 65
      points:
        type: "integer"
        example: 25
      active:
        type: "boolean"
      createdAt:
        type: "integer"
        example: 1592092149591
      updatedAt:
        type: "integer"
        example: 1592092149591
      deactivatedAt:
        type: "integer"
        example: 1592092149591
  Subject:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      name:
        type: "string"
        example: "Diseño de Sistemas"
      codename:
        type: "string"
        example: "DSI"
      programId:
        type: "string"
        format: "uuid"
      hours:
        type: "integer"
        example: 2
      points:
        type: "integer"
        example: 1
      active:
        type: "boolean"
      optative:
        type: "boolean"
      createdAt:
        type: "integer"
        example: 1592092149591
      updatedAt:
        type: "integer"
        example: 1592092149591
  UpdateProgramPayload:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Plan 2008"
      validFrom:
        type: "string"
        example: "2020-05-08"
      validTo:
        type: "string"
        example: "2020-05-09"
      hours:
        type: "integer"
        example: 65
      points:
        type: "integer"
        example: 25
  CreateSubjectPayload:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Diseño de Sistemas"
      codename:
        type: "string"
        example: "DSI"
      hours:
        type: "integer"
        example: 2
      points:
        type: "integer"
        example: 2
      optative:
        type: "boolean"
